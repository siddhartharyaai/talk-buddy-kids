import { supabase } from '@/integrations/supabase/client';

// Sample stories for initial content
export const sampleStories = {
  en: [
    {
      id: 'en_001',
      title: 'The Curious Elephant',
      language: 'en',
      ageBand: '5-7',
      body: 'Once upon a time, there was a young elephant named Ellie who loved to explore. Every morning, she would wake up and ask her mother, "What adventure will we have today?" One sunny day, Ellie discovered a beautiful butterfly sitting on a flower. The butterfly had wings like rainbows! "Hello little butterfly," said Ellie gently. "You are so colorful!" The butterfly danced around Ellie\'s trunk and they became the best of friends.',
      author: 'Buddy AI',
      tags: ['animals', 'friendship', 'nature'],
      readingLevel: 2,
      createdAt: new Date().toISOString(),
      source: 'buddy-ai'
    }
  ],
  hi: [
    {
      id: 'hi_001', 
      title: '‡§ö‡§§‡•Å‡§∞ ‡§ö‡•Ç‡§π‡§æ',
      language: 'hi',
      ageBand: '5-7',
      body: '‡§è‡§ï ‡§¨‡§æ‡§∞ ‡§ï‡•Ä ‡§¨‡§æ‡§§ ‡§π‡•à, ‡§è‡§ï ‡§õ‡•ã‡§ü‡§æ ‡§∏‡§æ ‡§ö‡•Ç‡§π‡§æ ‡§•‡§æ ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§ö‡§ø‡§Ç‡§ï‡•Ç ‡§•‡§æ‡•§ ‡§ö‡§ø‡§Ç‡§ï‡•Ç ‡§¨‡§π‡•Å‡§§ ‡§ö‡§§‡•Å‡§∞ ‡§•‡§æ ‡§î‡§∞ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§®‡§à ‡§ö‡•Ä‡§ú‡•á‡§Ç ‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡§æ ‡§•‡§æ‡•§ ‡§è‡§ï ‡§¶‡§ø‡§® ‡§â‡§∏‡§®‡•á ‡§¶‡•á‡§ñ‡§æ ‡§ï‡§ø ‡§¨‡§ø‡§≤‡•ç‡§≤‡•Ä ‡§∞‡§∏‡•ã‡§à ‡§Æ‡•á‡§Ç ‡§∏‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à‡•§ ‡§ö‡§ø‡§Ç‡§ï‡•Ç ‡§®‡•á ‡§∏‡•ã‡§ö‡§æ, "‡§Ö‡§ó‡§∞ ‡§Æ‡•à‡§Ç ‡§ö‡•Å‡§™‡§ö‡§æ‡§™ ‡§ú‡§æ‡§ä‡§Ç ‡§§‡•ã ‡§Æ‡•Å‡§ù‡•á ‡§™‡§®‡•Ä‡§∞ ‡§Æ‡§ø‡§≤ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§" ‡§µ‡§π ‡§¶‡§¨‡•á ‡§™‡§æ‡§Ç‡§µ ‡§∞‡§∏‡•ã‡§à ‡§Æ‡•á‡§Ç ‡§ó‡§Ø‡§æ ‡§î‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§¶‡§ø‡§∑‡•ç‡§ü ‡§™‡§®‡•Ä‡§∞ ‡§ñ‡§æ‡§ï‡§∞ ‡§ñ‡•Å‡§∂‡•Ä ‡§∏‡•á ‡§µ‡§æ‡§™‡§∏ ‡§Ö‡§™‡§®‡•á ‡§ò‡§∞ ‡§Ü ‡§ó‡§Ø‡§æ‡•§',
      author: 'Buddy AI',
      tags: ['animals', 'clever', 'food'],
      readingLevel: 2,
      createdAt: new Date().toISOString(),
      source: 'buddy-ai'
    }
  ]
};

// Sample nursery rhymes
export const sampleRhymes = {
  en: [
    {
      id: 'rhyme_en_001',
      title: 'Twinkle Twinkle Little Star',
      language: 'en',
      lyrics: [
        'Twinkle, twinkle, little star,',
        'How I wonder what you are!',
        'Up above the world so high,',
        'Like a diamond in the sky.',
        'Twinkle, twinkle, little star,',
        'How I wonder what you are!'
      ],
      ageBand: '3-5',
      tags: ['stars', 'space', 'classic'],
      source: 'public-domain'
    }
  ],
  hi: [
    {
      id: 'rhyme_hi_001',
      title: '‡§ö‡§Ç‡§¶‡§æ ‡§Æ‡§æ‡§Æ‡§æ',
      language: 'hi',
      lyrics: [
        '‡§ö‡§Ç‡§¶‡§æ ‡§Æ‡§æ‡§Æ‡§æ ‡§¶‡•Ç‡§∞ ‡§ï‡•á,',
        '‡§™‡•Å‡§è ‡§™‡§ï‡§æ‡§è ‡§¨‡•Ç‡§∞ ‡§ï‡•á‡•§',
        '‡§Ü‡§™ ‡§ñ‡§æ‡§è‡§Ç ‡§•‡§æ‡§≤‡•Ä ‡§Æ‡•á‡§Ç,',
        '‡§Æ‡•Å‡§®‡•ç‡§®‡•á ‡§ï‡•ã ‡§¶‡•á ‡§™‡•ç‡§Ø‡§æ‡§≤‡•Ä ‡§Æ‡•á‡§Ç‡•§',
        '‡§™‡•ç‡§Ø‡§æ‡§≤‡•Ä ‡§ó‡§à ‡§ü‡•Ç‡§ü,',
        '‡§Æ‡•Å‡§®‡•ç‡§®‡§æ ‡§ó‡§Ø‡§æ ‡§∞‡•Ç‡§†‡•§'
      ],
      ageBand: '3-5',
      tags: ['moon', 'food', 'classic'],
      source: 'traditional'
    }
  ]
};

// Helper to upload initial content to Supabase Storage
export const uploadInitialContent = async () => {
  try {
    console.log('üöÄ Uploading initial content to storage...');
    
    // Upload stories
    for (const [lang, stories] of Object.entries(sampleStories)) {
      for (const story of stories) {
        const fileName = `stories/${lang}/${story.id}-${story.title.toLowerCase().replace(/\s+/g, '-')}.json`;
        const storyBlob = new Blob([JSON.stringify(story, null, 2)], { type: 'application/json' });
        
        const { error } = await supabase.storage
          .from('content')
          .upload(fileName, storyBlob, { upsert: true });
          
        if (error) {
          console.error(`Error uploading story ${story.id}:`, error);
        } else {
          console.log(`‚úÖ Uploaded story: ${story.title}`);
        }
      }
    }
    
    // Upload rhymes
    for (const [lang, rhymes] of Object.entries(sampleRhymes)) {
      for (const rhyme of rhymes) {
        const fileName = `rhymes/${lang}/${rhyme.id}-${rhyme.title.toLowerCase().replace(/\s+/g, '-')}.json`;
        const rhymeBlob = new Blob([JSON.stringify(rhyme, null, 2)], { type: 'application/json' });
        
        const { error } = await supabase.storage
          .from('content')
          .upload(fileName, rhymeBlob, { upsert: true });
          
        if (error) {
          console.error(`Error uploading rhyme ${rhyme.id}:`, error);
        } else {
          console.log(`‚úÖ Uploaded rhyme: ${rhyme.title}`);
        }
      }
    }
    
    console.log('üéâ Initial content upload complete!');
    return true;
    
  } catch (error) {
    console.error('‚ùå Failed to upload initial content:', error);
    return false;
  }
};

// Helper to get SFX content (for now returns placeholder URLs)
export const getSfxHelper = (name: string): string => {
  // Placeholder SFX URLs - in production these would be actual files
  const sfxMap: Record<string, string> = {
    'tiger_roar': 'https://www.soundjay.com/misc/sounds/tiger-roar.mp3',
    'dog_bark': 'https://www.soundjay.com/misc/sounds/dog-bark.mp3', 
    'cat_meow': 'https://www.soundjay.com/misc/sounds/cat-meow.mp3',
    'cow_moo': 'https://www.soundjay.com/misc/sounds/cow-moo.mp3'
  };
  
  return sfxMap[name] || sfxMap['tiger_roar'];
};

// Test content switchboard functionality
export const testContentSwitchboard = async () => {
  console.log('üß™ Testing content switchboard...');
  
  const tests = [
    { type: 'story', lang: 'en', age: 6, topic: 'animals' },
    { type: 'rhyme', lang: 'hi', age: 4, topic: 'any' },
    { type: 'sfx', lang: 'en', age: 5, topic: 'animals' }
  ];
  
  for (const test of tests) {
    try {
      const { data, error } = await supabase.functions.invoke('get-content', {
        body: test
      });
      
      if (error) {
        console.error(`‚ùå Test failed for ${test.type}:`, error);
      } else {
        console.log(`‚úÖ ${test.type} test passed:`, data.content?.title || data.content?.name);
      }
    } catch (error) {
      console.error(`‚ùå Test error for ${test.type}:`, error);
    }
  }
};